<?php
	
function timedelta($array1, $array2) {
	$time = array();
	$time['seconds'] = 60 - abs($array1['seconds'] - $array2['seconds']);
	$time['minutes'] = abs($array1['minutes'] - $array2['minutes']);
	$time['hours']   = abs($array1['hours'] - $array2['hours']);

	return $time;
}

function timeunits($sec) {
	if ($sec<60)		return "$sec sec.";
	if ($sec<3600)		return floor($sec/60).' min.';
	if ($sec<7200)		return '1 hour';
	if ($sec<86400)		return floor($sec/3600).' hours';
	if ($sec<172800)	return '1 day';
	if ($sec<31556926)	return floor($sec/86400).' days';
	return sprintf("%.1f years", $sec/31556926);
}

function timeunits2($sec, $no_blank = false) {
	$y = floor($sec / 31556926);
	$sec -= $y * 31556926;
	$d = floor($sec / 86400);
	$h = floor($sec / 3600) % 24;
	$m = floor($sec / 60) % 60;
	$s = $sec % 60;
	
	$ys = ($y != 1 ? 's' : '');
	$ds = ($d != 1 ? 's' : '');
	$hs = ($h != 1 ? 's' : '');
	
	$str = ($y?"$y year$ys ":'').($d?"$d day$ds ":'').($h?"$h hour$hs ":'').($m?"$m min. ":'').($s?"$s sec.":'');
	if (!$str && $no_blank) $str = "0 sec.";
	if (substr($str,-1)==' ') $str = substr_replace($str,'',-1);
	return $str;
}

function is_birthday($timestamp) {
	global $loguser; 
	return (date('m-d', $timestamp) == date('m-d',ctime() + $loguser['tzoff']));
}

function printdate($timestamp = NULL, $short = false) {
	global $loguser;
	if (!$timestamp) $timestamp = ctime();
	return date(
		$short ? $loguser['dateshort'] : $loguser['dateformat'],
		$timestamp + $loguser['tzoff']
	);
}

// I'm picky about this sorta thing
function getblankdate() {
	global $loguser;

	// We only need to do the replacing one time
	static $bl;
	if ($bl) return $bl;

	$bl = $loguser['dateformat'];
	$bl = preg_replace('/[jNwzWnLgGI]/',	'-',      $bl);
	$bl = preg_replace('/[dSmtyaAhHis]/',	'--',     $bl);
	$bl = preg_replace('/[DFMBe]/',			'---',    $bl);
	$bl = preg_replace('/[oY]/',			'----',   $bl);
	$bl = preg_replace('/[lu]/',			'------', $bl);
	$bl = preg_replace('/[c]/',				'----------T--:--:--+00:00', $bl);
	$bl = preg_replace('/[r]/',				'---, -- --- ---- --:--:-- +0000', $bl);
	return $bl;
}

// Helpful Unix timestamp conversion functions
const DTF_DATE = 0b1;
const DTF_TIME = 0b10;
const DTF_NOLABEL = 0b100;
function datetofields(&$timestamp, $basename, $flags = DTF_DATE){ // $date = true, $time = false, $raw = false
	
	if ($timestamp) $val = explode("|", date("n|j|Y|H|i|s", $timestamp));
	else            $val = array_fill(0, 6, "");
	
	if ($flags & DTF_NOLABEL) $fname = array('', '-', '-', ' &nbsp; ', ':', ':');
	else                      $fname = array('Month: ', ' Day: ', ' Year: ', ' Hours: ', ' Minutes: ', ' Seconds: ');
	
	$fields = "";
	if ($flags & DTF_DATE) {
		$fields .= 
		"$fname[0]<input name='{$basename}month' type='text' maxlength='2' size='2' class='right' value='$val[0]'>".
		"$fname[1]<input name='{$basename}day'   type='text' maxlength='2' size='2' class='right' value='$val[1]'>".
		"$fname[2]<input name='{$basename}year'  type='text' maxlength='4' size='4' class='right' value='$val[2]'>";
	}
	if ($flags & DTF_TIME) {
		$fields .= 
		"$fname[3]<input name='{$basename}hour'  type='text' maxlength='2' size='2' class='right' value='$val[3]'>".
		"$fname[4]<input name='{$basename}min'   type='text' maxlength='2' size='2' class='right' value='$val[4]'>".
		"$fname[5]<input name='{$basename}sec'   type='text' maxlength='4' size='4' class='right' value='$val[5]'>";
	}
	return $fields;
}

// Automatic mktime wrapper for fields generated by datetofields()
// Just say no to invalid dates
function fieldstotimestamp($basename, $arrayname = 'GLOBALS'){
	global ${$arrayname}; // Workaround to allow accessing superglobals with 'variable variables'
	
	// Follow the mktime argument order
	$fnames = array('hour', 'min', 'sec', 'month', 'day', 'year');
	
	// Populate the array with the datetofields results (ie: $_POST['testyear'],... with $arrayname = '_POST' and $basename = 'test';
	// The values may or may not exist, so we pass them by reference
	$v = array();
	for ($i = 0; $i < 6; ++$i) {
		$v[$i] = &${$arrayname}[$basename.$fnames[$i]];
		$v[$i] = (int) $v[$i];
	}
	// Don't allow zero timestamps
	if (!$v[0] && !$v[1] && !$v[2] && !$v[3] && !$v[4] && !$v[5]) return NULL;
	
	// Is the date valid? (if one of the values is set, the other two have to be set as well)
	if ($v[3] || $v[4] || $v[5])
		if (!checkdate($v[3], $v[4], $v[5]))
			return NULL;
	
	// Is the time in a valid range?
	if ($v[0] < 0 || $v[0] > 23) $v[0] = 0;
	if ($v[1] < 0 || $v[1] > 59) $v[1] = 0;
	if ($v[2] < 0 || $v[2] > 59) $v[2] = 0;
	
	$res = mktime($v[0],$v[1],$v[2],$v[3],$v[4],$v[5]);
	return ($res !== FALSE ? $res : NULL); // Return NULL so it can directly go in a prepared query
}

function getyeardiff($a, $b){
	$a = new DateTime(date("Y-m-d", $a));
	$b = new DateTime(date("Y-m-d", $b));
	return $b->diff($a)->y;
}
